name: Build and Test
on: push
jobs:
  build:
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        java-version: [ 22, 23-ea  ]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          java-version: ${{ matrix.java-version }}
          distribution: temurin
      - name: Build and Test
        run: |
          export MAVEN_OPTS="-XX:+PrintFlagsFinal" 
          xvfb-run mvn -B verify -Djavafx.platform=linux jacoco:report -Pcoverage
          unset MAVEN_OPTS
      - name: Cache Maven artifacts
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Cache node
        uses: actions/cache@v3
        with:
          path: web-bundle/node
          key: ${{ runner.os }}-node-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os}}-node-
      - name: Cache node_modules
        uses: actions/cache@v3
        with:
          path: web-bundle/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/pom.xml', '**/package.json') }}
          restore-keys: |
            ${{ runner.os}}-node_modules-
      - name: Build ${{ matrix.java-version }}
        run: mvn -B clean test


      # Créer le heap dump
      - name: Capture Heap Dump
        run: |
          sleep 10  
          app_pid=$(cat app_pid.txt)
          jcmd $app_pid GC.heap_dump /home/runner/work/heapdump.hprof

      # Télécharger le Heap Dump comme artifact et ensuite le sauvegarder localement
      - name: Upload Heap Dump
        uses: actions/upload-artifact@v4
        with:
          name: heap_dump
          path: /home/runner/work/heapdump.hprof



